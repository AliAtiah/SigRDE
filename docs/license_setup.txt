MIT License

Copyright (c) 2025 Ali Atiah Alzahrani

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

---

# setup.py
"""
Setup script for deep-signature-rde package.
"""

from setuptools import setup, find_packages

with open("README.md", "r", encoding="utf-8") as fh:
    long_description = fh.read()

with open("requirements.txt", "r", encoding="utf-8") as fh:
    requirements = [line.strip() for line in fh if line.strip() and not line.startswith("#")]

setup(
    name="deep-signature-rde",
    version="0.1.0",
    author="Ali Atiah Alzahrani",
    author_email="alialzahrani@pif.gov.sa",
    description="Deep Signature and Neural RDE Methods for Path-Dependent Portfolio Optimization",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/yourusername/deep-signature-rde",
    packages=find_packages(where="src"),
    package_dir={"": "src"},
    classifiers=[
        "Development Status :: 3 - Alpha",
        "Intended Audience :: Science/Research",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
    ],
    python_requires=">=3.8",
    install_requires=requirements,
    extras_require={
        "dev": [
            "pytest>=7.0.0",
            "pytest-cov>=3.0.0",
            "black>=22.0.0",
            "flake8>=4.0.0",
            "mypy>=0.950",
        ],
        "viz": [
            "matplotlib>=3.4.0",
            "seaborn>=0.11.0",
            "plotly>=5.0.0",
        ],
    },
    entry_points={
        "console_scripts": [
            "train-sig-rde=scripts.train:main",
            "evaluate-sig-rde=scripts.evaluate:main",
            "ablation-sig-rde=scripts.ablations:main",
        ],
    },
)

---

# Makefile
"""
Makefile for common tasks.
"""

.PHONY: help install test clean format lint docs

help:
	@echo "Available commands:"
	@echo "  install    Install the package in development mode"
	@echo "  test       Run tests"
	@echo "  clean      Clean build artifacts"
	@echo "  format     Format code with black"
	@echo "  lint       Run flake8 linter"
	@echo "  docs       Build documentation"

install:
	pip install -e .
	pip install -e ".[dev,viz]"

test:
	pytest tests/ -v --cov=src --cov-report=html

clean:
	rm -rf build/
	rm -rf dist/
	rm -rf *.egg-info
	rm -rf __pycache__/
	rm -rf .pytest_cache/
	rm -rf .coverage
	rm -rf htmlcov/
	find . -type d -name "__pycache__" -exec rm -rf {} +
	find . -type f -name "*.pyc" -delete

format:
	black src/ scripts/ tests/

lint:
	flake8 src/ scripts/ tests/

docs:
	cd docs && make html

train-asian:
	python scripts/train.py --config configs/asian_d100.yaml

train-portfolio:
	python scripts/train.py --config configs/portfolio_hjb.yaml --use_2bsde

evaluate:
	python scripts/evaluate.py --checkpoint checkpoints/best_model.pt

ablation:
	python scripts/ablations.py --ablation all